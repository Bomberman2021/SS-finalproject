{"version":3,"sources":["../../../../assets/scripts/assets/scripts/bomb.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/scripts","sourcesContent":["// Learn TypeScript:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/typescript.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst {ccclass, property} = cc._decorator;\n\nconst Input = {}\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property(cc.SpriteFrame)\n    bomb_frame:cc.SpriteFrame = null;\n    @property(cc.Node)\n    map:cc.Node = null;\n    @property(cc.Node)\n    player:cc.Node = null;\n\n    private time_count = 0;\n    private is_exploded = false;\n    private exploded_range = 1;\n    private exploded_speed = 1000;\n    private real_position:cc.Vec2 = cc.v2(0,0);\n    private revised_position:cc.Vec2 = cc.v2(0,0);\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad () {\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        cc.systemEvent.on(cc.SystemEvent.EventType.KEY_UP, this.onKeyUp, this);\n    }\n    start () {\n    }\n    onKeyDown(e) {\n        Input[e.keyCode] = 1;\n    }\n\n    onKeyUp(e) {\n        Input[e.keyCode] = 0;\n    }\n\n\n    update (dt) {\n        this.Change_position();\n        if(Input[cc.macro.KEY.space]){\n            this.Create_bomb();\n            cc.log(1);\n        }\n    }\n\n    Change_position(){\n        this.real_position.x = this.player.position.x - this.map.position.x;\n        this.real_position.y = this.player.position.y - this.map.position.y;\n        let tiledMap = this.map.getComponent(cc.TiledMap);\n        let tiledSize = tiledMap.getTileSize();\n        let height = tiledSize.height * this.node.scaleY;\n        let width = tiledSize.width * this.node.scaleX;\n        this.revised_position.x = this.real_position.x / width;\n        this.revised_position.y = this.real_position.y / height;\n    }\n    Create_bomb(){\n        let tiledMap = this.map.getComponent(cc.TiledMap);\n        let layer = tiledMap.getLayer(\"playerstart\");\n        let layerSize = layer.getLayerSize();\n        cc.log(layerSize);\n        for (let i = 0; i < layerSize.width; i++) {\n            for (let j = 0; j < layerSize.height; j++) {\n                let tiled = layer.getTiledTileAt(i, j, true);\n                if(i > this.revised_position.x - 1 && i < this.revised_position.x && (layerSize.height - j) > this.revised_position.y && (layerSize.height - j) < this.revised_position.y + 1){\n                    let Sprite = tiled.node.addComponent(cc.Sprite);\n                    Sprite.spriteFrame = this.bomb_frame;\n                    tiled.node.anchorX = 0;\n                    tiled.node.anchorY = 0;\n                }\n            }\n        }\n    }\n}\n"]}